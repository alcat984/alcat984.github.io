<<<<<<< HEAD
<<<<<<< HEAD
.wrapper {
  display: flex;  
  flex-flow: row wrap;
  font-weight: normal;
  text-align: center;
  color: white;
  }

.wrapper > * {
  padding: 10px;
  flex: 1 100%;
}

.header {
  background: black;
}

.footer {
  background: black;
}

.main {
  text-align: left;
  background: black;
}

.aside-1 {
  background: black;
}

.aside-2 {
  background: whitesmoke;
}

@media all and (min-width: 600px) {
  .aside { flex: 1 0 0; }
}

@media all and (min-width: 800px) {
  .main    { flex: 3 0px; }
  .aside-1 { order: 1; } 
  .main    { order: 2; }
  .aside-2 { order: 3; }
  .footer  { order: 4; }
}

body {
  padding: 2em; 
  background-color: black;
  display: grid;
}



/* Navigation bar */

.navigation {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-end;
  
  list-style: none;
  margin: 0; 
  background: black;
}

.navigation a {
  text-decoration: none;
  display: block;
  padding: 1em;
  color: white;
}

.navigation a:hover {
  background: white;
  color:black;
}

@media all and (max-width: 800px) {
  .navigation {
    justify-content: space-around;
  }
}

@media all and (max-width: 600px) {
  .navigation {
    flex-flow: column wrap;
    padding: 0;
  }
  .navigation a { 
    text-align: center; 
    padding: 10px;
    border-top: 1px solid rgba(255, 255, 255,0.3); 
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); 
  }
  .navigation li:last-of-type a {
    border-bottom: none;
  }
}

/* Extras */

.avatar{
  border-radius: 50%;
  vertical-align: middle;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  border: 2px solid white;
}
.aside-1 {
    font-size: 64px;
    line-height: 80px;
    color: rgb(79, 229, 255);
    font-weight: 600;
    margin: 0px 0px 0px -6px;
}

img:hover {
  animation: shake 0.5s;
  animation-iteration-count: infinite;
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); }
}

/* Contacts */
/* Style inputs */
input[type=text], select, textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid black;
  margin-top: 6px;
  margin-bottom: 16px;
  resize: vertical;
}

input[type=submit] {
  background-color: #4CAF50;
  color: white;
  padding: 12px 20px;
  border: none;
  cursor: pointer;
}

input[type=submit]:hover {
  background-color: #45a049;
}

/* Style the container/contact section */
.container {
  border-radius: 5px;
  background-color: black;
  padding: 10px;
}

/* Create two columns that float next to eachother */
.column {
  float: left;
  width: 50%;
  margin-top: 6px;
  padding: 20px;
}

/* Clear floats after the columns */
.row:after {
  content: "";
  display: table;
  clear: both;
}

/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */
@media screen and (max-width: 600px) {
  .column, input[type=submit] {
    width: 100%;
    margin-top: 0;
  }
}

/* Contacts container*/
.container{
  color:white;
}
.footer {
  text-align: center;
  color:white;
}

/* Social Media*/

a {
  text-decoration: none;
  font-size: 22px;
  color: white;
  margin-left: 20px;
}

button:hover, a:hover {
  opacity: 0.7;
  color: whitesmoke;
}
/* Flex container*/

.flex-container {
  /* We first create a flex layout context */
  display: flex;
  
  /* Then we define the flow direction 
     and if we allow the items to wrap 
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;
  
  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
  
  padding: 0;
  margin: 0;
  list-style: none;
}

.flex-item {
  background: tomato;
  padding: 5px;
  width: 200px;
  height: 150px;
  margin-top: 10px;
  line-height: 150px;
  color: white;
  font-weight: bold;
  font-size: 3em;
  text-align: center;
=======
body {
  font-display: Arial;
}
.container{
  display: grid;
  /*grid-template-columns:25% 50% 25%;
  grid-template-rows:300px 300px;*/
  /* grid-template: 300px 150px / repeat(4, 1fr); */
  grid-template: 100px 1fr 150px / 200px 1fr;
  grid-gap: 10px;
  height:100vh;
  grid-template-areas: "header header"
                       "left contenido"
                       "footer footer"
}
.item {
  //This is to automatically inspect all the elements
  background: lightblue;
  padding: 10px;
  border: 1px solid red;
  
}
.item:nth-of-type(4){
  background: whitesmoke;
  overflow: auto;
  /*display: subgrid;*/
  display: grid;
  /*display:inline-grid;*/
  grid-template: 50px 50px 50px / 200% 200px 200px;
}
.item .item{
  background: lightgray;
}
.header{
  grid-area:header;
  background-color: lightgray;
}
.left{
  grid-area:left;
  background-color: lightgray;
}
.contenido{
  grid-area:contenido;
  background-color: lightgray;
}
.footer{
  grid-area:footer;
  background-color: lightgray;
>>>>>>> 6b4caac20c387bcc4ef617ca055c411c5285f721
}
=======
<<<<<<< HEAD
.wrapper {
  display: flex;  
  flex-flow: row wrap;
  font-weight: normal;
  text-align: center;
  color: white;
  }

.wrapper > * {
  padding: 10px;
  flex: 1 100%;
}

.header {
  background: black;
}

.footer {
  background: black;
}

.main {
  text-align: left;
  background: black;
}

.aside-1 {
  background: black;
}

.aside-2 {
  background: whitesmoke;
}

@media all and (min-width: 600px) {
  .aside { flex: 1 0 0; }
}

@media all and (min-width: 800px) {
  .main    { flex: 3 0px; }
  .aside-1 { order: 1; } 
  .main    { order: 2; }
  .aside-2 { order: 3; }
  .footer  { order: 4; }
}

body {
  padding: 2em; 
  background-color: black;
  display: grid;
}



/* Navigation bar */

.navigation {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-end;
  
  list-style: none;
  margin: 0; 
  background: black;
}

.navigation a {
  text-decoration: none;
  display: block;
  padding: 1em;
  color: white;
}

.navigation a:hover {
  background: white;
  color:black;
}

@media all and (max-width: 800px) {
  .navigation {
    justify-content: space-around;
  }
}

@media all and (max-width: 600px) {
  .navigation {
    flex-flow: column wrap;
    padding: 0;
  }
  .navigation a { 
    text-align: center; 
    padding: 10px;
    border-top: 1px solid rgba(255, 255, 255,0.3); 
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); 
  }
  .navigation li:last-of-type a {
    border-bottom: none;
  }
}

/* Extras */

.avatar{
  border-radius: 50%;
  vertical-align: middle;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  border: 2px solid white;
}
.aside-1 {
    font-size: 64px;
    line-height: 80px;
    color: rgb(79, 229, 255);
    font-weight: 600;
    margin: 0px 0px 0px -6px;
}

img:hover {
  animation: shake 0.5s;
  animation-iteration-count: infinite;
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); }
}

/* Contacts */
/* Style inputs */
input[type=text], select, textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid black;
  margin-top: 6px;
  margin-bottom: 16px;
  resize: vertical;
}

input[type=submit] {
  background-color: #4CAF50;
  color: white;
  padding: 12px 20px;
  border: none;
  cursor: pointer;
}

input[type=submit]:hover {
  background-color: #45a049;
}

/* Style the container/contact section */
.container {
  border-radius: 5px;
  background-color: black;
  padding: 10px;
}

/* Create two columns that float next to eachother */
.column {
  float: left;
  width: 50%;
  margin-top: 6px;
  padding: 20px;
}

/* Clear floats after the columns */
.row:after {
  content: "";
  display: table;
  clear: both;
}

/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */
@media screen and (max-width: 600px) {
  .column, input[type=submit] {
    width: 100%;
    margin-top: 0;
  }
}

/* Contacts container*/
.container{
  color:white;
}
.footer {
  text-align: center;
  color:white;
}

/* Social Media*/

a {
  text-decoration: none;
  font-size: 22px;
  color: white;
  margin-left: 20px;
}

button:hover, a:hover {
  opacity: 0.7;
  color: whitesmoke;
}
/* Flex container*/

.flex-container {
  /* We first create a flex layout context */
  display: flex;
  
  /* Then we define the flow direction 
     and if we allow the items to wrap 
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;
  
  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
  
  padding: 0;
  margin: 0;
  list-style: none;
}

.flex-item {
  background: tomato;
  padding: 5px;
  width: 200px;
  height: 150px;
  margin-top: 10px;
  line-height: 150px;
  color: white;
  font-weight: bold;
  font-size: 3em;
  text-align: center;
=======
body {
  font-display: Arial;
}
.container{
  display: grid;
  /*grid-template-columns:25% 50% 25%;
  grid-template-rows:300px 300px;*/
  /* grid-template: 300px 150px / repeat(4, 1fr); */
  grid-template: 100px 1fr 150px / 200px 1fr;
  grid-gap: 10px;
  height:100vh;
  grid-template-areas: "header header"
                       "left contenido"
                       "footer footer"
}
.item {
  //This is to automatically inspect all the elements
  background: lightblue;
  padding: 10px;
  border: 1px solid red;
  
}
.item:nth-of-type(4){
  background: whitesmoke;
  overflow: auto;
  /*display: subgrid;*/
  display: grid;
  /*display:inline-grid;*/
  grid-template: 50px 50px 50px / 200% 200px 200px;
}
.item .item{
  background: lightgray;
}
.header{
  grid-area:header;
  background-color: lightgray;
}
.left{
  grid-area:left;
  background-color: lightgray;
}
.contenido{
  grid-area:contenido;
  background-color: lightgray;
}
.footer{
  grid-area:footer;
  background-color: lightgray;
>>>>>>> 6b4caac20c387bcc4ef617ca055c411c5285f721
}
>>>>>>> a2ced3a7d846f0efabff6bda0af5bb20d34dd664
